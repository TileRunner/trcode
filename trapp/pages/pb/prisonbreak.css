:root {
    --squareSide: 40px;
    --cellBlockSide: 40px;
    --cellBlockSelectedHeight: 45px;
    --selectedColor: #2196F3;
    --lobbyFontSize: 20px;
    --commonBorderColour: blue; /*darkslateblue*/
    --commonTextBackgroundColour: black;
    --commonTextColour: whitesmoke;
    --tileBackgroundColour: orangered;
    --prisonersTileColour: whitesmoke;
    --guardsTileColour: black;
}
.prisonbreak {
    background-color: grey;
    background-image: url("../../public/prisonbars.png");
    background-size: cover;
    background-blend-mode: normal;
    color:lightgrey;
}
.pbGameid {
    background-color: var(--commonTextBackgroundColour);
    color: var(--commonTextColour);
    border-color: var(--commonBorderColour);
    border-width: 0 0 3px 3px;
    border-style: solid;
}
.pbtitle {
    background-color: grey;
    font-size: 2.8em;
    text-align: center;
    font-family: cursive;
    font-style: italic;
    color:black;
}
.pbhomelink {
    background-color: var(--commonTextBackgroundColour);
    color: var(--commonTextColour);
    text-align: right;
    border-color: var(--commonBorderColour);
    border-width: 0 3px 3px 0;
    border-style: solid;
}
.pbPlayerOuterSection {
    width: 200px;
    /* I did this temporarily to see where the area was
    border-style: inset;
    border-color: orangered;
    border-width: 1px;
     */
    padding-top: 3px;
}
.pbPlayerInnerSection {
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    font-size: x-large;
}
.pbPlayerTitle {
    border-style: solid;
    background-color: whitesmoke;
    color: black;
    font-family: fantasy;
    text-align: center;
    padding-left: 2px;
    padding-right: 2px;
}
.pbSquareOuter { /* Thin black border around each board square */
    border: solid;
    border-width: thin;
    border-color: black;
    border-style: solid;
    padding: 0px; /* So nothing appears between the squares - keep them flush */
}
.pbSquareInner { /* Common board square properties */
    height: var(--squareSide);
    width: var(--squareSide);
    border-style: none;
}
.pbSquareInner:focus { /* No outline when in focus */
    outline: none;
}
.pbSquareInner.style1 { /* Alternating square style 1 */
    background-color: black;
    color: black;
}
.pbSquareInner.style2 { /* Alternating square style 2 */
    background-color: darkgrey;
    color: darkgrey;
}
.pbSquareInner.CenterSquare { /* Centre square */
    padding-top: 3px;
    border-style: none;
    background-color: var(--commonTextBackgroundColour);
    color: cornsilk;
    font-size: x-large;
}
.pbSquareInner.EscapeHatch { /* Escape hatch square */
    padding-top: 3px;
    border-style: solid;
    border-color: var(--commonBorderColour);
    border-width: thin;
    background-color: darkblue;
    color: cornsilk;
    text-align: center;
}
.pbSquareInner.P { /* Prisoners have a tile on the square */
    background-color: var(--tileBackgroundColour);
    color: var(--prisonersTileColour);
    font-weight: bolder;
    text-align: center;
}
.pbSquareInner.G { /* Guards have a tile on the square */
    background-color: var(--tileBackgroundColour);
    color: var(--guardsTileColour);
    font-weight: bolder;
    text-align: center;
}
.u::after {
    content: "u";
    font-size: small;
}
.pbSquareInner.RightArrow { /* Right arrow word direction indicator */
    padding: 0%;
    border-style: none;
    background-color: grey;
    color: cyan;
    font-weight: bolder;
    text-align: center;
}
.pbSquareInner.DownArrow { /* Down arrow word direction indicator */
    padding: 0%;
    border-style: none;
    background-color: grey;
    color: cyan;
    font-weight: bolder;
    text-align: center;
}
.pbRow {
    padding: 0%;
}
.pbBoardPlusUnderboard {
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}
.pbBoard {
    border-style: solid;
    border-width: 5px;
    border-color: var(--commonBorderColour);
}
.pbUnderboard {
    margin-top: 10px;
    border-style: solid;
    border-color: var(--commonBorderColour);
    background-color: var(--commonTextBackgroundColour);
    color: var(--commonTextColour);
    padding-left: 10px;
    padding-right: 10px;
}
.pbTileAndMovesOuter {
    align-items: left;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    max-width: 250px;
}
.pbTilepool {
    text-align: left;
    border-width: 3px;
    border-style: solid solid none solid;
    border-color: var(--commonBorderColour);
    background-color: var(--commonTextBackgroundColour);
    color: var(--commonTextColour);
    font-family: monospace;
    font-size: xx-small;
    word-wrap: break-word;
}
.pbTilepoolDivider {
    width: 2px;
    vertical-align: top;
    font-size: larger;
}
.pbTilepoolDivider::after {
    content: ".";
}
.pbTilepoolTitle {
    font-size: 150%;
    letter-spacing: 3px;
    border-bottom-style: dotted;
    border-color: var(--commonBorderColour);
}
.pbTilepoolTile {
    font-size: small;
    padding-left: 2px;
    padding-right: 2px;
}
.pbMoves {
    text-align: left;
    border-width: 3px;
    border-style: solid;
    border-color: var(--commonBorderColour);
    background-color: var(--commonTextBackgroundColour);
    color: var(--commonTextColour);
    font-family: monospace;
    font-size: xx-small;
}
.pbMovesTitle {
    font-size: 150%;
    letter-spacing: 3px;
    border-bottom-style: dotted;
    border-color: var(--commonBorderColour);
}
.pbMovesScrollable {
    max-height: 550px;
    /* max-width: 250px; */
    overflow-x: scroll;
    overflow-y: scroll;
    scroll-behavior: auto;
}
.pbMove {
    font-size: small;
    padding-left: 2px;
    padding-right: 2px;
}
.pbMove.by {
    color: yellow;
}
.pbMove.SWAP {
    color: cyan;
}
.pbMove.SWAP::after {
    content: "Swap tiles";
}
.pbMove.PASS {
    color: red;
}
.pbMove.PASS::after {
    content: "Pass turn";
}
.pbMove.PLAY {
    color: var(--commonTextColour);
}
.pbTilerack {
    padding-top: 2px;
    padding-bottom: 5px;
    display: flex;
    flex-direction: row;
}
.pbTileOnRack {
    background-color: var(--tileBackgroundColour);
    width: var(--squareSide);
    height: var(--squareSide);
    font-weight: bolder;
    text-align: center;
}
.pbTileOnRack.Unselected {
    border-style: solid;
    border-width: thin;
    border-color: black;
}
.pbTileOnRack.Selected {
    border-style: inset;
    border-width: thick;
    border-color: white;
}
.pbTileOnRack.P {
    color: var(--prisonersTileColour);
}
.pbTileOnRack.G {
    color: var(--guardsTileColour);
}
.pbRescuesMade {
    background-color: var(--commonTextBackgroundColour);
    color:var(--commonTextColour);
    border-color: var(--commonBorderColour);
    border-width: 3px;
    border-style: solid;
    padding-left: 3px;
}
.pbRescuee {
    padding: 2px;
    width: 85px;
    height: 85px;
}
.pbActionButtonDiv {
    margin-left: 7px;
}
.pbActionButton {
    padding: 2px 2px 2px 2px;
    margin-left: 5px;
    border-radius: 35px;
    border-width: 3px;
    border-color: var(--commonBorderColour);
    border-style: solid;
    background-color: var(--commonTextBackgroundColour);
    color: var(--commonTextColour);
    font-family: cursive;
    width: 200px;
    word-spacing: 3px;
}
.pbActionButtonText {
    margin-left: 5px;
    margin-right: 15px;
}
.pbLobbyGamesHeader {
    font-weight: bolder;
    font-size: var(--lobbyFontSize);
    background-color: var(--commonBorderColour);
    color: whitesmoke;
    text-align: center;
}
.pbGamesInProgressRow:nth-child(odd) {
    background-color: lightblue;
    border-color: whitesmoke;
    border-left-style: solid;
    border-right-style: solid;
}
.pbGamesInProgressRow:nth-child(even) {
    background-color: cornflowerblue;
    border-color: whitesmoke;
    border-left-style: solid;
    border-right-style: solid;
}
.pbGamesInProgressRow:last-child {
    border-bottom-style: double;
}
.pbLobbyCommonInfoSection {
    padding-left: 50px;
    padding-top: 5px;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-size:var(--lobbyFontSize);
}
.pbLobbyNicknamePrompt {
    font-weight: bold;
}
.pbLobbyNicknamePrompt::after {
    content: ":";
    padding-left: 5px;
    padding-right: 5px;
}
.pbLobbyNicknameInput {
    vertical-align: middle;
    width: 300px;
}
/* Customize the label (the container) */
.pbLobbyUpsidedownContainer {
    display: flexbox;
    position: relative;
    padding-left: 35px; /* This positions the checkbox label to the right of the checkbox */
    vertical-align: top;
    margin-left: 10px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
/* Hide the browser's default checkbox */
.pbLobbyUpsidedownContainer input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}
/* Create a custom checkbox */
.pbLobbyUpsidedownCheckmark {
    position: absolute;
    top: 2px;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #eee;
}
/* On mouse-over, add a grey background color */
.pbLobbyUpsidedownContainer:hover input ~ .pbLobbyUpsidedownCheckmark {
    background-color: #ccc;
}
  
/* When the checkbox is checked, add a blue background */
.pbLobbyUpsidedownContainer input:checked ~ .pbLobbyUpsidedownCheckmark {
    background-color:var(--selectedColor);
}
  
/* Create the checkmark/indicator (hidden when not checked) */
.pbLobbyUpsidedownCheckmark:after {
    content: "";
    position: absolute;
    display: none;
}
  
/* Show the checkmark when checked */
.pbLobbyUpsidedownContainer input:checked ~ .pbLobbyUpsidedownCheckmark:after {
    display: block;
}
  
/* Style the checkmark/indicator
     It is drawing 2 of the border sides angled 45 degrees to look like a checkmark
 */
.pbLobbyUpsidedownContainer .pbLobbyUpsidedownCheckmark:after {
    left: 8px;
    top: 2px;
    width: 8px;
    height: 17px;
    border: solid white;
    border-width: 0 3px 3px 0;
    border-radius: 25%; /* round the checkmark bottom a little */
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
.pbLobbyPrisonerSection {
    padding-left: 50px;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
.pbLobbyGameIdPrompt {
    margin-left: 5px;
    margin-right: 5px;
    vertical-align: middle;
}
.pbLobbyGameIdPrompt::after {
    content: ":";
    padding-left: 3px;
}
.pbLobbyGameIdInput {
    vertical-align: middle;
    width: 300px;
}
.pbLobbyRackSizePrompt {
    margin-left: 5px;
    margin-right: 20px;
}
.pbLobbyRackSizePrompt:before {
    content: "Cell Block";
}
.pbLobbyRackSizePrompt::after {
    content: ":";
    padding-left: 2px;
}
.pbLobbyRackSize {
    background-image: url("../../public/prisonbars-square.png");
    vertical-align: middle;
    background-size: var(--cellBlockSide);
    background-color: grey;
    color: whitesmoke;
    width: var(--cellBlockSide);
    height: var(--cellBlockSide);
    margin-right:20px;
    align-content: center;
}
.pbLobbyRackSizeSelected {
    vertical-align: middle;
    background-image: url("../../public/prisonbars-square.png");
    background-size: var(--cellBlockSide);
    background-color: grey;
    color: whitesmoke;
    width: var(--cellBlockSide);
    height: var(--cellBlockSelectedHeight);
    margin-right:20px;
    border-width: 5px;
    border-color: var(--selectedColor);
    border-style: solid;
}
.pbLobbyRackSizeSelected:focus {
    outline: none;
}
.pbLobbyCellBlockInfo {
    padding-left: 5px;
}
.pbLobbyGuardSection {
    padding-top: 5px;
    padding-left: 50px;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}
.pbLobbyGuardInfo {
    padding-left: 5px;
}
.pbLobbyGamesHeaderCol {
    padding-left: 10px;
    padding-right: 10px;
    border-left-style: solid;
    border-right-style: solid;
    border-top-style: double;
}
.pbLobbyGameid {
    font-family: 'Courier New', Courier, monospace;
    font-weight: bolder;
}
.pbLobbyGameRacksize {
    font-style: italic;
    padding-left: 5px;
    border-left-style: solid;
    border-color: whitesmoke;
    text-align: center;
}
.pbLobbyGameStatus {
    font-style: italic;
    padding-left: 5px;
    border-left-style: solid;
    border-color: whitesmoke;
}
.pbLobbyPlayerIndicator {
    text-align: center;
    padding-top: 3px;
    border-left-style: solid;
    border-color: whitesmoke;
}
.pbLobbyActionButton {
    background-color: lightsteelblue;
    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    margin-left: 10px;
    width: 180px;
}
.pbLobbyActionNone {
    width: 200px;
    text-align: center;
}
.upsidedown {
    transform: rotate(180deg);
}

.pbChat {
    align-items: left;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    border-width: 3px;
    border-style: none solid none solid;
    border-color: var(--commonBorderColour);
}
.pbChatTable {
    border-color: var(--commonBorderColour);
}
.pbChatTitle {
    background-color: var(--commonTextBackgroundColour);
    color: var(--commonTextColour);
    border-color: var(--commonBorderColour);
    border-style: none none dotted none;
    padding-left: 5px;
    letter-spacing: 3px;
    font-size: smaller;
}
.pbChatFrom {
    background-color: black;
    color: white;
    padding-right: 5px;
    vertical-align: top;
}
.pbChatFrom::before {
    content: ">";
    color: yellow;
}
.pbChatFrom::after {
    content: ":";
    color: yellow;
    font-size: larger;
    padding-left: 1px;
}
.pbChatMsg {
    padding-left: 5px;
    font-style: italic;
    color:whitesmoke;
    background-color: black;
    padding-top:2px;
}
.pbChatInput {
    font-style: italic;
    color:whitesmoke;
    background-color: var(--commonBorderColour);
    width: 100%;
}
.pbChatInputEmpty {
    background-color: whitesmoke;
    width: 100%;
    max-block-size: 30px;
    cursor: text;
}
